#  Find the LibXMLSec digital siginature library
#
#  XMLSEC1_FOUND - System has LibXMLSec
#  XMLSEC1_INCLUDE_DIR - The LibXMLSec include directory
#  XMLSEC1_LIBRARIES - The libraries needed to use LibXMLSec
#  XMLSEC1_DEFINITIONS - Compiler switches required for using LibXMLSec
#=============================================================================

# use pkg-config to get the directories and then use these values
# in the FIND_PATH() and FIND_LIBRARY() calls
FIND_PACKAGE(PkgConfig)
PKG_CHECK_MODULES(PC_XMLSEC1 xmlsec1)
PKG_CHECK_MODULES(PC_XMLSEC1-OPENSSL xmlsec1-openssl)

SET(XMLSEC1_DEFINITIONS ${PC_XMLSEC1_CFLAGS_OTHER})
SET(XMLSEC1-OPENSSL_DEFINITIONS ${PC_XMLSEC1-OPENSSL_CFLAGS_OTHER})
#~ SET(XMLSEC1_DEFINITIONS 
			#~ -DXMLSEC_CRYPTO="openssl";
			#~ -D__XMLSEC_FUNCTION__=__FUNCTION__;
			#~ -DXMLSEC_NO_GOST=1;
			#~ -DXMLSEC_NO_XKMS=1;
			#~ -DXMLSEC_NO_CRYPTO_DYNAMIC_LOADING=1
#~ )
#~ SET(XMLSEC1-OPENSSL_DEFINITIONS 
			#~ -DXMLSEC_CRYPTO="openssl";
			#~ -D__XMLSEC_FUNCTION__=__FUNCTION__;
			#~ -DXMLSEC_NO_GOST=1;
			#~ -DXMLSEC_NO_XKMS=1;
			#~ -DXMLSEC_NO_CRYPTO_DYNAMIC_LOADING=1;
			#~ -DXMLSEC_OPENSSL_100=1;
			#~ -DXMLSEC_CRYPTO_OPENSSL=1
#~ )

#~ message("PC_XMLSEC1_LIBDIR : ${PC_XMLSEC1_LIBDIR}")
#~ message("PC_XMLSEC1_LIBRARY_DIRS : ${PC_XMLSEC1_LIBRARY_DIRS}")
#~ message("XMLSEC1_DEFINITIONS : ${XMLSEC1_DEFINITIONS}")
#~ message("XMLSEC1-OPENSSL_DEFINITIONS : ${XMLSEC1-OPENSSL_DEFINITIONS}")

FIND_PATH(XMLSEC1_INCLUDE_DIR 
	NAMES xmlsec/xmlsec.h
   PATHS
	${INSTALL_PREFIX}/include/xmlsec1
	${STATIC_LIBS_DIR}/include/xmlsec1
   HINTS
	${PC_XMLSEC1_INCLUDEDIR}
	${PC_XMLSEC1_INCLUDE_DIRS}
   PATH_SUFFIXES xmlsec1 
)

FIND_PATH(XMLSEC1-OPENSSL_INCLUDE_DIR 
	NAMES xmlsec/openssl/crypto.h
   PATHS
	${INSTALL_PREFIX}/include/xmlsec1
	${STATIC_LIBS_DIR}/include/xmlsec1
   HINTS
	${PC_XMLSEC1_INCLUDEDIR}
	${PC_XMLSEC1_INCLUDE_DIRS}
   PATH_SUFFIXES xmlsec1 
   )

FIND_LIBRARY(XMLSEC1_LIBRARIES 
	NAMES xmlsec1
   PATHS
	${INSTALL_PREFIX}/lib
	${STATIC_LIBS_DIR}/lib
	/usr/lib
   HINTS
	${PC_XMLSEC1_LIBDIR}
	${PC_XMLSEC1_LIBRARY_DIRS}
   PATH_SUFFIXES xmlsec xmlsec1
   )

FIND_LIBRARY(XMLSEC1-OPENSSL_LIBRARIES 
	NAMES xmlsec1-openssl
   PATHS
	${INSTALL_PREFIX}/lib
	${STATIC_LIBS_DIR}/lib
	/usr/lib
   HINTS
	${PC_XMLSEC1_LIBDIR}
	${PC_XMLSEC1_LIBRARY_DIRS}
   PATH_SUFFIXES xmlsec xmlsec1
   )
IF(XMLSEC1-OPENSSL_LIBRARIES-NOTFOUND)
	MESSAGE(RED "Missing XMLSEC1-OPENSSL_LIBRARIES")
ENDIF()

# handle the QUIETLY and REQUIRED arguments and set XMLSEC1_FOUND to TRUE if 
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(XMLSEC1 DEFAULT_MSG XMLSEC1_LIBRARIES XMLSEC1-OPENSSL_LIBRARIES XMLSEC1_INCLUDE_DIR XMLSEC1-OPENSSL_INCLUDE_DIR)
MARK_AS_ADVANCED(XMLSEC1_INCLUDE_DIR XMLSEC1-OPENSSL_INCLUDE_DIR XMLSEC1_LIBRARIES XMLSEC1-OPENSSL_LIBRARIES )

IF(XMLSEC1_FOUND)
	message(STATUS "Xmlsec1 found : ${White}${XMLSEC1_LIBRARIES}")
	message(STATUS "Xmlsec1 found : ${White}${XMLSEC1-OPENSSL_LIBRARIES}")
	message(STATUS "Xmlsec1 found : ${White}${XMLSEC1_INCLUDE_DIR}")
	message(STATUS "Xmlsec1 found : ${White}${XMLSEC1-OPENSSL_INCLUDE_DIR}")
ENDIF()
